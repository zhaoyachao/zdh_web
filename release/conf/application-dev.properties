version=5.4.0

#标识自己的服务,多台服务器1,2,3,4递增配置
myid=1
#必须写 和zdh_server 端区分开
instance=zdh_web
server.port = 8081

#权限产品代码,后期权限管理会单独做成一个通用的权限接入平台(zdp)
zdp.product=zdh
zdp.ak=c5f503f09d99b03ea436408ea979ada8
zdp.sk=95a064009b8b729472952378cfc861fc
zdp.init.roles=role_base,role_zdh_base,role_zdp,role_wemock,role_flow,role_market,role_beaconfire,admin,role_rqueue

#springboot 2.0后弃用此配置,启用此配置,必须配置zdh/js/zdh_common.js 中server_context变量
#server.context-path=/zdh

# 等待队列长度，默认100。队列也做缓冲池用，但也不能无限长，不但消耗内存，而且出队入队也消耗CPU
server.tomcat.accept-count=1000
# 最大工作线程数，默认200。（4核8g内存，线程数800，一般是核数*200。操作系统做线程之间的切换调度是有系统开销的，所以不是越多越好。）
server.tomcat.max-threads=200
# 最小工作空闲线程数，默认10。（适当增大一些，以便应对突然增长的访问量）
server.tomcat.min-spare-threads=20
#最大连接数，默认为10000
server.tomcat.max-connections=10000

web.path =/WEB-INF/zdh/
cookie.path="/"

#用户根据自己要求使用对应的日志配置
#logging.config=release/conf/logback.xml

spring.http.multipart.maxFileSize = 300Mb
spring.http.multipart.maxRequestSize=500Mb

spring.http.encoding.charset=utf-8
spring.http.encoding.force=true
spring.http.encoding.enabled=true

#instancename = scheduler_zdh
#scheduler.instanceName = scheduler_zdh
#org.quartz.threadPool.threadCount = 5
#zdh.schedule.quartz.auto.startup = true
#org.quartz.scheduler.instanceId = "AUTO"
#org.quartz.scheduler.instanceIdGenerator.class="com.zyc.zdh.quartz.ZdhInstanceIdGenerator"
#org.quartz.jobStore.driverDelegateClass="org.quartz.impl.jdbcjobstore.StdJDBCDelegate"

zdh.schedule.quartz.auto.startup = true
zdh.schedule.quartz.scheduler.instanceName=scheduler_zdh
zdh.schedule.org.quartz.scheduler.instanceId=AUTO
zdh.schedule.org.quartz.scheduler.instanceIdGenerator.class=com.zyc.zdh.quartz.ZdhInstanceIdGenerator
zdh.schedule.org.quartz.scheduler.skipUpdateCheck=true
zdh.schedule.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreCMT
zdh.schedule.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
zdh.schedule.org.quartz.jobStore.dataSource=quartzDataSource
zdh.schedule.org.quartz.jobStore.tablePrefix=QRTZ_
zdh.schedule.org.quartz.jobStore.isClustered=true
#故障检测时间30s
zdh.schedule.org.quartz.jobStore.clusterCheckinInterval=30000
zdh.schedule.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
zdh.schedule.org.quartz.threadPool.threadCount=5

zdh.schedule.org.quartz.jobStore.maxMisfiresToHandleAtATime=1
zdh.schedule.org.quartz.jobStore.misfireThreshold=50000
#org.quartz.jobStore.txIsolationLevelSerializable 如果为true 会出现无法连续事物的错误
zdh.schedule.org.quartz.jobStore.txIsolationLevelSerializable=false
zdh.schedule.org.quartz.jobStore.useProperties=true
#
zdh.schedule.org.quartz.jobstore.acquireTriggerWithinLock=true

zdh.schedule.org.quartz.dataSource.quartzDataSource.driver=com.mysql.cj.jdbc.Driver
zdh.schedule.org.quartz.dataSource.quartzDataSource.URL=jdbc:mysql://127.0.0.1:3306/zdh?serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true
zdh.schedule.org.quartz.dataSource.quartzDataSource.user=zyc
zdh.schedule.org.quartz.dataSource.quartzDataSource.password=123456
zdh.schedule.org.quartz.dataSource.quartzDataSource.maxConnections=10
zdh.schedule.org.quartz.jobStore.dontSetAutoCommitFalse=false

# zdh禁用调度类型,多个逗号分割
zdh.disenable.more_task=
zdh.disenable.job_type=

spring.datasource.name = test
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/zdh?serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.jdbc-url = jdbc:mysql://127.0.0.1:3306/zdh?serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username = zyc
spring.datasource.password = 123456
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.filters = stat,wall,log4j
spring.datasource.maxActive = 20
spring.datasource.initialSize = 1
spring.datasource.maxWait = 60000
spring.datasource.minIdle = 1
spring.datasource.timeBetweenEvictionRunsMillis = 60000
spring.datasource.minEvictableIdleTimeMillis = 300000
spring.datasource.validationQuery = select count(1) from dual
spring.datasource.testWhileIdle = true
spring.datasource.testOnBorrow = false
spring.datasource.testOnReturn = false
spring.datasource.poolPreparedStatements = true
spring.datasource.maxOpenPreparedStatements = 20
spring.datasource.logSlowSql=true

mybatis.typeAliasesPackage=com.zyc.zdh.entity
mybatis.mapperLocations=classpath:mapper/*.xml
mybatis.config-location=classpath:mybatis-config.xml

spring.thymeleaf.cache=false

logging.level.root=info

#redis ------start------- redis cluster 模式 hostName 使用ip1:port1,ip2:port2 格式 逗号分隔
spring.redis.hostName=127.0.0.1
spring.redis.port=6379
spring.redis.password=zyczzu
spring.redis.timeOut=1000
spring.redis.maxIdle=10
spring.redis.maxWaitMillis=15000
spring.redis.testOnBorrow=true
spring.redis.testWhileIdle=false

spring.mvc.view.prefix:/WEB-INF/zdh/
spring.mvc.view.suffix:.html
#spring.mvc.statics-path-pattern:/*
#spring.resources.statics-locations=/statics/bootstrap/,/statics/js/,/statics/css/,/statics/img/


#email ------start---------
spring.mail.host=smtp.qq.com
spring.mail.username=xxxx@qq.com
spring.mail.password=xxxxx
spring.mail.port=587


#alarm 告警
email.schedule.interval=15s
retry.schedule.interval=1s


ecache.config.location=ehcache-shiro.xml

#api doc
springdoc.packagesToScan=com.zyc.zdh.controller
springdoc.swagger-ui.path=/api-docs

#mongodb
#spring.data.mongodb.uri=mongodb://192.168.110.10:27017/zdh

#zdh_queue
queue.server.db.url=jdbc:mysql://localhost:3306/mydb
queue.server.db.driver=com.mysql.cj.jdbc.Driver
queue.server.db.user=root
queue.server.db.password=

#datax_web执行环境
python_engine=D:/Python27/python.exe
datax_home=D:/datax

#多个告警邮箱,逗号分割
alarm.admin.email=xxx@qq.com

#智能营销-临时文件路径
digitalmarket.tmp.path=/home/tmp/file
#智能营销-存储类型,local,sftp,minio
digitalmarket.store.type=local
#智能营销-本地存储地址
digitalmarket.local.path=/home/zyc/label
#智能营销-sftp地址
digitalmarket.sftp.host=
digitalmarket.sftp.port=
digitalmarket.sftp.username=
digitalmarket.sftp.password=
digitalmarket.sftp.path=
#智能营销-minio地址
digitalmarket.minio.ak=
digitalmarket.minio.sk=
digitalmarket.minio.endpoint=
digitalmarket.minio.region=
digitalmarket.minio.bucket=

#密码加密
zdh.auth.password.key=
zdh.auth.password.iv=

#ip2region path
ip2region.path=F:/ip2region.xdb

#ship url
zdh.ship.url=http://127.0.0.1:9002/api/v1/ship/accept

beacon.fire.sms.regin.id=cn-qingdao
beacon.fire.sms.ak=
beacon.fire.sms.sk=
beacon.fire.sms.template=
beacon.fire.sms.sign=

#wemock
zdh.wemock.short.host=http://127.0.0.1:9001
zdh.wemock.short.generator=/api/short/generator

#zdh_spark
zdh.spark.queue_enable=false
zdh.spark.queue_pre_key=zdh_spark_etl_queue